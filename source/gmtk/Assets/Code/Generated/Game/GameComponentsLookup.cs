//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class GameComponentsLookup {

    public const int Destructed = 0;
    public const int Id = 1;
    public const int Radius = 2;
    public const int SelfDestructTimer = 3;
    public const int View = 4;
    public const int ViewPath = 5;
    public const int ViewPrefab = 6;
    public const int ParentTransform = 7;
    public const int SaveRotationInSpawn = 8;
    public const int SpriteRenderer = 9;
    public const int Transform = 10;
    public const int WorldPosition = 11;
    public const int BaseStats = 12;
    public const int EffectValue = 13;
    public const int StatChange = 14;
    public const int StatModifiers = 15;
    public const int TargetId = 16;
    public const int MoveDirection = 17;
    public const int MovementAvailable = 18;
    public const int Moving = 19;
    public const int Speed = 20;
    public const int TargetPoint = 21;
    public const int TargetPointReached = 22;
    public const int TurnedAlongDirection = 23;
    public const int ActivityFree = 24;
    public const int AngryState = 25;
    public const int CanBeChosenForReplication = 26;
    public const int CanStartReplication = 27;
    public const int ChosenForReplication = 28;
    public const int ChosenForReplicationBy = 29;
    public const int CleanupMovingFinished = 30;
    public const int CleanupResetReplicationMarkers = 31;
    public const int CurrentReplicationDuration = 32;
    public const int DeadState = 33;
    public const int DefaultReplicationDuration = 34;
    public const int DraggingState = 35;
    public const int IdleState = 36;
    public const int InvalidReplicationTarget = 37;
    public const int MaxReplicationInterval = 38;
    public const int MinReplicationInterval = 39;
    public const int MovingFinished = 40;
    public const int MovingInterval = 41;
    public const int MovingUp = 42;
    public const int NearReplicationTarget = 43;
    public const int Rabbit = 44;
    public const int RabbitAnimator = 45;
    public const int RabbitColorType = 46;
    public const int RabbitNextSimpleState = 47;
    public const int RabbitStateMachine = 48;
    public const int RabbitVisualChanger = 49;
    public const int Replicating = 50;
    public const int ReplicationExpired = 51;
    public const int ReplicationFinished = 52;
    public const int ReplicationInterval = 53;
    public const int ReplicationState = 54;
    public const int ReplicationTarget = 55;
    public const int ReplicationTimeLeft = 56;
    public const int ReplicationTimeUp = 57;
    public const int ResetReplicationProcess = 58;
    public const int StallParentIndex = 59;
    public const int StupidMoveState = 60;
    public const int TimeLeftForMoving = 61;
    public const int TimeLeftForNextReplication = 62;
    public const int TransitionComplete = 63;
    public const int WaitingForMoving = 64;
    public const int WaitingForNextReplicationUp = 65;
    public const int WaitingReplicationTarget = 66;
    public const int WaitReplicationDuration = 67;
    public const int WaitReplicationTimeLeft = 68;
    public const int WantToReplicate = 69;
    public const int AfterDragPosition = 70;
    public const int CleanupUnselectMark = 71;
    public const int DragCanceled = 72;
    public const int DragFinished = 73;
    public const int Dragging = 74;
    public const int DragStarted = 75;
    public const int DragStopped = 76;
    public const int EntitiesForReleaseQueue = 77;
    public const int EntitiesForSelectionQueue = 78;
    public const int FollowSelectCenterSpeed = 79;
    public const int HasSelections = 80;
    public const int MoveToAfterDragPositionSpeed = 81;
    public const int MovingToAfterDragPosition = 82;
    public const int MultipleSelectionWindow = 83;
    public const int ReleaseFromDragUp = 84;
    public const int SavedPositionBeforeDrag = 85;
    public const int Selectable = 86;
    public const int SelectCenterPosition = 87;
    public const int SelectCenterRadius = 88;
    public const int Selected = 89;
    public const int SelectedEntities = 90;
    public const int Selection = 91;
    public const int SelectionDragMaxTime = 92;
    public const int SelectionDragTimeLeft = 93;
    public const int SelectionLayerMask = 94;
    public const int ShiftFromSelect = 95;
    public const int StoppedWaitingMouseDragFinish = 96;
    public const int UnselectSelectedEntities = 97;
    public const int WaitingMouseDragFinish = 98;
    public const int Stall = 99;
    public const int StallBounds = 100;
    public const int StallIndex = 101;

    public const int TotalComponents = 102;

    public static readonly string[] componentNames = {
        "Destructed",
        "Id",
        "Radius",
        "SelfDestructTimer",
        "View",
        "ViewPath",
        "ViewPrefab",
        "ParentTransform",
        "SaveRotationInSpawn",
        "SpriteRenderer",
        "Transform",
        "WorldPosition",
        "BaseStats",
        "EffectValue",
        "StatChange",
        "StatModifiers",
        "TargetId",
        "MoveDirection",
        "MovementAvailable",
        "Moving",
        "Speed",
        "TargetPoint",
        "TargetPointReached",
        "TurnedAlongDirection",
        "ActivityFree",
        "AngryState",
        "CanBeChosenForReplication",
        "CanStartReplication",
        "ChosenForReplication",
        "ChosenForReplicationBy",
        "CleanupMovingFinished",
        "CleanupResetReplicationMarkers",
        "CurrentReplicationDuration",
        "DeadState",
        "DefaultReplicationDuration",
        "DraggingState",
        "IdleState",
        "InvalidReplicationTarget",
        "MaxReplicationInterval",
        "MinReplicationInterval",
        "MovingFinished",
        "MovingInterval",
        "MovingUp",
        "NearReplicationTarget",
        "Rabbit",
        "RabbitAnimator",
        "RabbitColorType",
        "RabbitNextSimpleState",
        "RabbitStateMachine",
        "RabbitVisualChanger",
        "Replicating",
        "ReplicationExpired",
        "ReplicationFinished",
        "ReplicationInterval",
        "ReplicationState",
        "ReplicationTarget",
        "ReplicationTimeLeft",
        "ReplicationTimeUp",
        "ResetReplicationProcess",
        "StallParentIndex",
        "StupidMoveState",
        "TimeLeftForMoving",
        "TimeLeftForNextReplication",
        "TransitionComplete",
        "WaitingForMoving",
        "WaitingForNextReplicationUp",
        "WaitingReplicationTarget",
        "WaitReplicationDuration",
        "WaitReplicationTimeLeft",
        "WantToReplicate",
        "AfterDragPosition",
        "CleanupUnselectMark",
        "DragCanceled",
        "DragFinished",
        "Dragging",
        "DragStarted",
        "DragStopped",
        "EntitiesForReleaseQueue",
        "EntitiesForSelectionQueue",
        "FollowSelectCenterSpeed",
        "HasSelections",
        "MoveToAfterDragPositionSpeed",
        "MovingToAfterDragPosition",
        "MultipleSelectionWindow",
        "ReleaseFromDragUp",
        "SavedPositionBeforeDrag",
        "Selectable",
        "SelectCenterPosition",
        "SelectCenterRadius",
        "Selected",
        "SelectedEntities",
        "Selection",
        "SelectionDragMaxTime",
        "SelectionDragTimeLeft",
        "SelectionLayerMask",
        "ShiftFromSelect",
        "StoppedWaitingMouseDragFinish",
        "UnselectSelectedEntities",
        "WaitingMouseDragFinish",
        "Stall",
        "StallBounds",
        "StallIndex"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(Code.Common.Destructed),
        typeof(Code.Common.Id),
        typeof(Code.Common.Radius),
        typeof(Code.Common.SelfDestructTimer),
        typeof(Code.Common.View),
        typeof(Code.Common.ViewPath),
        typeof(Code.Common.ViewPrefab),
        typeof(Code.Gameplay.Common.ParentTransform),
        typeof(Code.Gameplay.Common.SaveRotationInSpawn),
        typeof(Code.Gameplay.Common.SpriteRendererComponent),
        typeof(Code.Gameplay.Common.TransformComponent),
        typeof(Code.Gameplay.Common.WorldPosition),
        typeof(Code.Gameplay.Features.CharacterStats.BaseStats),
        typeof(Code.Gameplay.Features.CharacterStats.EffectValue),
        typeof(Code.Gameplay.Features.CharacterStats.StatChange),
        typeof(Code.Gameplay.Features.CharacterStats.StatModifiers),
        typeof(Code.Gameplay.Features.CharacterStats.TargetId),
        typeof(Code.Gameplay.Features.Movement.MoveDirection),
        typeof(Code.Gameplay.Features.Movement.MovementAvailable),
        typeof(Code.Gameplay.Features.Movement.Moving),
        typeof(Code.Gameplay.Features.Movement.Speed),
        typeof(Code.Gameplay.Features.Movement.TargetPoint),
        typeof(Code.Gameplay.Features.Movement.TargetPointReached),
        typeof(Code.Gameplay.Features.Movement.TurnedAlongDirection),
        typeof(Code.Gameplay.Features.Rabbits.ActivityFree),
        typeof(Code.Gameplay.Features.Rabbits.AngryState),
        typeof(Code.Gameplay.Features.Rabbits.CanBeChosenForReplication),
        typeof(Code.Gameplay.Features.Rabbits.CanStartReplication),
        typeof(Code.Gameplay.Features.Rabbits.ChosenForReplication),
        typeof(Code.Gameplay.Features.Rabbits.ChosenForReplicationBy),
        typeof(Code.Gameplay.Features.Rabbits.CleanupMovingFinished),
        typeof(Code.Gameplay.Features.Rabbits.CleanupResetReplicationMarkers),
        typeof(Code.Gameplay.Features.Rabbits.CurrentReplicationDuration),
        typeof(Code.Gameplay.Features.Rabbits.DeadState),
        typeof(Code.Gameplay.Features.Rabbits.DefaultReplicationDuration),
        typeof(Code.Gameplay.Features.Rabbits.DraggingState),
        typeof(Code.Gameplay.Features.Rabbits.IdleState),
        typeof(Code.Gameplay.Features.Rabbits.InvalidReplicationTarget),
        typeof(Code.Gameplay.Features.Rabbits.MaxReplicationInterval),
        typeof(Code.Gameplay.Features.Rabbits.MinReplicationInterval),
        typeof(Code.Gameplay.Features.Rabbits.MovingFinished),
        typeof(Code.Gameplay.Features.Rabbits.MovingInterval),
        typeof(Code.Gameplay.Features.Rabbits.MovingUp),
        typeof(Code.Gameplay.Features.Rabbits.NearReplicationTarget),
        typeof(Code.Gameplay.Features.Rabbits.Rabbit),
        typeof(Code.Gameplay.Features.Rabbits.RabbitAnimatorComponent),
        typeof(Code.Gameplay.Features.Rabbits.RabbitColorTypeComponent),
        typeof(Code.Gameplay.Features.Rabbits.RabbitNextSimpleState),
        typeof(Code.Gameplay.Features.Rabbits.RabbitStateMachineComponent),
        typeof(Code.Gameplay.Features.Rabbits.RabbitVisualChangerComponent),
        typeof(Code.Gameplay.Features.Rabbits.Replicating),
        typeof(Code.Gameplay.Features.Rabbits.ReplicationExpired),
        typeof(Code.Gameplay.Features.Rabbits.ReplicationFinished),
        typeof(Code.Gameplay.Features.Rabbits.ReplicationInterval),
        typeof(Code.Gameplay.Features.Rabbits.ReplicationState),
        typeof(Code.Gameplay.Features.Rabbits.ReplicationTarget),
        typeof(Code.Gameplay.Features.Rabbits.ReplicationTimeLeft),
        typeof(Code.Gameplay.Features.Rabbits.ReplicationTimeUp),
        typeof(Code.Gameplay.Features.Rabbits.ResetReplicationProcess),
        typeof(Code.Gameplay.Features.Rabbits.StallParentIndex),
        typeof(Code.Gameplay.Features.Rabbits.StupidMoveState),
        typeof(Code.Gameplay.Features.Rabbits.TimeLeftForMoving),
        typeof(Code.Gameplay.Features.Rabbits.TimeLeftForNextReplication),
        typeof(Code.Gameplay.Features.Rabbits.TransitionComplete),
        typeof(Code.Gameplay.Features.Rabbits.WaitingForMoving),
        typeof(Code.Gameplay.Features.Rabbits.WaitingForNextReplicationUp),
        typeof(Code.Gameplay.Features.Rabbits.WaitingReplicationTarget),
        typeof(Code.Gameplay.Features.Rabbits.WaitReplicationDuration),
        typeof(Code.Gameplay.Features.Rabbits.WaitReplicationTimeLeft),
        typeof(Code.Gameplay.Features.Rabbits.WantToReplicate),
        typeof(Code.Gameplay.Features.Selection.AfterDragPosition),
        typeof(Code.Gameplay.Features.Selection.CleanupUnselectMark),
        typeof(Code.Gameplay.Features.Selection.DragCanceled),
        typeof(Code.Gameplay.Features.Selection.DragFinished),
        typeof(Code.Gameplay.Features.Selection.Dragging),
        typeof(Code.Gameplay.Features.Selection.DragStarted),
        typeof(Code.Gameplay.Features.Selection.DragStopped),
        typeof(Code.Gameplay.Features.Selection.EntitiesForReleaseQueue),
        typeof(Code.Gameplay.Features.Selection.EntitiesForSelectionQueue),
        typeof(Code.Gameplay.Features.Selection.FollowSelectCenterSpeed),
        typeof(Code.Gameplay.Features.Selection.HasSelections),
        typeof(Code.Gameplay.Features.Selection.MoveToAfterDragPositionSpeed),
        typeof(Code.Gameplay.Features.Selection.MovingToAfterDragPosition),
        typeof(Code.Gameplay.Features.Selection.MultipleSelectionWindowComponent),
        typeof(Code.Gameplay.Features.Selection.ReleaseFromDragUp),
        typeof(Code.Gameplay.Features.Selection.SavedPositionBeforeDrag),
        typeof(Code.Gameplay.Features.Selection.Selectable),
        typeof(Code.Gameplay.Features.Selection.SelectCenterPosition),
        typeof(Code.Gameplay.Features.Selection.SelectCenterRadius),
        typeof(Code.Gameplay.Features.Selection.Selected),
        typeof(Code.Gameplay.Features.Selection.SelectedEntities),
        typeof(Code.Gameplay.Features.Selection.Selection),
        typeof(Code.Gameplay.Features.Selection.SelectionDragMaxTime),
        typeof(Code.Gameplay.Features.Selection.SelectionDragTimeLeft),
        typeof(Code.Gameplay.Features.Selection.SelectionLayerMask),
        typeof(Code.Gameplay.Features.Selection.ShiftFromSelect),
        typeof(Code.Gameplay.Features.Selection.StoppedWaitingMouseDragFinish),
        typeof(Code.Gameplay.Features.Selection.UnselectSelectedEntities),
        typeof(Code.Gameplay.Features.Selection.WaitingMouseDragFinish),
        typeof(Code.Gameplay.Features.Stalls.Stall),
        typeof(Code.Gameplay.Features.Stalls.StallBounds),
        typeof(Code.Gameplay.Features.Stalls.StallIndex)
    };
}
